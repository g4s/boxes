# This is a very small playbook to provision a virtual mediaserver build by packer
#
# In reality the playbook assert, that some prequesites are satisfied and will
# provision the machine with the help of some roles.
#
# Cause we execute this particular playbook from packer, we will not use 
# --extra-vars parameter. For all data which is needed for successful execution,
# it is recommended to use ENVs. (If you using the pypyr-pipeline this will
# automaticly happen.)
---

- name: configure media server
  hosts: all
  vars:
    tech_user: 'mediaserver'
    tech_group: 'mediaserver'
    nvidia_container_repo: 'https://nvidia.github.io/libnvidia-container/stable/rpm/nvidia-container-toolkit.repo'
  roles:
    - role: de.seafi.minimalinstall
      vars:
        hostname: {{ lookup('ansible.builtin.env', 'PACKER_VMNAME')}}
        dnf_cache: true
        ntp_server: {{ query('lines', 'cat ./files/ntp-server.tmp') }}

    - role: de.seafi.tailscale
      vars:
        tailscale_auth: {{ lookup('ansible.builtin.env', 'TSC_AUTH') }}

    - role: de.seafi.sshd
      vars:
        endlessh_support: false
        sslh_support:     false
        knockd_support:   false
        mosh_support:     true

    - role: de.seafi.cockpit
  tasks:
    - name: ensure technical user and group are present
      # creating user group and home for mediaserver
      # also create SSH-keys for automatic logins
      block:
        - ansible.builtin.group:
            name: {{ tech_group }}
            state: present

        - ansible.builtin.user:
            name: {{ tech_user }}
            comment: 'technical user'
            group: {{ tech_group }}
            state: present
            generate_ssh_key: true
            ssh_key_bits: 2048
            ssh_key_file: .ssh/id_rsa
          register: tech_user_obj

    - name: ensure all system package have an actual state
      ansible.builtin.dnf:
        name: '*'
        state: latest

    - name: ensure podman and nvidia container toolkit is present on host
      block:
        - ansible.builtin.dnf:
            name: 'podman'
            state: latest

        - ansible.builtin.shell:
            cmd: |
              curl -s -L {{ nvidia_container_repo }} | tee /etc/yum.repos.d/nvidia-container-toolkit.repo
              yum-config-manager --enable nvidia-container-toolkit-experimental
          when: {{ lookup('ansible.builtin.env', 'NVIDIAGPU') }}

        - ansible.builtin.dnf:
            name: nvidia-container-toolkit
            state: latest
          when: {{ lookup('ansible.builtin.env', 'NVIDIAGPU') }}

    - name: ensure buildah is present on host
      ansible.builtin.dnf:
        name: 'buildah'
        state: latest

    # including the role dynamicly at this point to ensure all
    # prequesites are satisfied
    #
    # the role will add some additions to the host like manage
    # storage
    - ansible.builtin.include_role:
        name: de.seafi.mediaserver
        vars:
          script_dir: '/usr/src/boxes/container/'
          deploy_target: localhost
          reverseproxy: false
          rffmpeg:
            supported: true
            ssh_priv_key: {{ tech_user_obj.ssh_key_file }}
            ssh_pub_key: {{ tech_user_obj.ssh_public_key }}
